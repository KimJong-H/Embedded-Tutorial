
Mask_ex)3.4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000001e6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000192  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000001e6  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000218  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  00000258  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000a62  00000000  00000000  00000278  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000080f  00000000  00000000  00000cda  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000034c  00000000  00000000  000014e9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  00001838  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003f4  00000000  00000000  0000185c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000030b  00000000  00000000  00001c50  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  00001f5b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	4b c0       	rjmp	.+150    	; 0x9c <__bad_interrupt>
   6:	00 00       	nop
   8:	49 c0       	rjmp	.+146    	; 0x9c <__bad_interrupt>
   a:	00 00       	nop
   c:	47 c0       	rjmp	.+142    	; 0x9c <__bad_interrupt>
   e:	00 00       	nop
  10:	45 c0       	rjmp	.+138    	; 0x9c <__bad_interrupt>
  12:	00 00       	nop
  14:	43 c0       	rjmp	.+134    	; 0x9c <__bad_interrupt>
  16:	00 00       	nop
  18:	41 c0       	rjmp	.+130    	; 0x9c <__bad_interrupt>
  1a:	00 00       	nop
  1c:	3f c0       	rjmp	.+126    	; 0x9c <__bad_interrupt>
  1e:	00 00       	nop
  20:	3d c0       	rjmp	.+122    	; 0x9c <__bad_interrupt>
  22:	00 00       	nop
  24:	3b c0       	rjmp	.+118    	; 0x9c <__bad_interrupt>
  26:	00 00       	nop
  28:	39 c0       	rjmp	.+114    	; 0x9c <__bad_interrupt>
  2a:	00 00       	nop
  2c:	37 c0       	rjmp	.+110    	; 0x9c <__bad_interrupt>
  2e:	00 00       	nop
  30:	35 c0       	rjmp	.+106    	; 0x9c <__bad_interrupt>
  32:	00 00       	nop
  34:	33 c0       	rjmp	.+102    	; 0x9c <__bad_interrupt>
  36:	00 00       	nop
  38:	31 c0       	rjmp	.+98     	; 0x9c <__bad_interrupt>
  3a:	00 00       	nop
  3c:	2f c0       	rjmp	.+94     	; 0x9c <__bad_interrupt>
  3e:	00 00       	nop
  40:	2d c0       	rjmp	.+90     	; 0x9c <__bad_interrupt>
  42:	00 00       	nop
  44:	2b c0       	rjmp	.+86     	; 0x9c <__bad_interrupt>
  46:	00 00       	nop
  48:	29 c0       	rjmp	.+82     	; 0x9c <__bad_interrupt>
  4a:	00 00       	nop
  4c:	27 c0       	rjmp	.+78     	; 0x9c <__bad_interrupt>
  4e:	00 00       	nop
  50:	25 c0       	rjmp	.+74     	; 0x9c <__bad_interrupt>
  52:	00 00       	nop
  54:	23 c0       	rjmp	.+70     	; 0x9c <__bad_interrupt>
  56:	00 00       	nop
  58:	21 c0       	rjmp	.+66     	; 0x9c <__bad_interrupt>
  5a:	00 00       	nop
  5c:	1f c0       	rjmp	.+62     	; 0x9c <__bad_interrupt>
  5e:	00 00       	nop
  60:	1d c0       	rjmp	.+58     	; 0x9c <__bad_interrupt>
  62:	00 00       	nop
  64:	1b c0       	rjmp	.+54     	; 0x9c <__bad_interrupt>
  66:	00 00       	nop
  68:	19 c0       	rjmp	.+50     	; 0x9c <__bad_interrupt>
  6a:	00 00       	nop
  6c:	17 c0       	rjmp	.+46     	; 0x9c <__bad_interrupt>
  6e:	00 00       	nop
  70:	15 c0       	rjmp	.+42     	; 0x9c <__bad_interrupt>
  72:	00 00       	nop
  74:	13 c0       	rjmp	.+38     	; 0x9c <__bad_interrupt>
  76:	00 00       	nop
  78:	11 c0       	rjmp	.+34     	; 0x9c <__bad_interrupt>
  7a:	00 00       	nop
  7c:	0f c0       	rjmp	.+30     	; 0x9c <__bad_interrupt>
  7e:	00 00       	nop
  80:	0d c0       	rjmp	.+26     	; 0x9c <__bad_interrupt>
  82:	00 00       	nop
  84:	0b c0       	rjmp	.+22     	; 0x9c <__bad_interrupt>
  86:	00 00       	nop
  88:	09 c0       	rjmp	.+18     	; 0x9c <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61
  98:	02 d0       	rcall	.+4      	; 0x9e <main>
  9a:	79 c0       	rjmp	.+242    	; 0x18e <_exit>

0000009c <__bad_interrupt>:
  9c:	b1 cf       	rjmp	.-158    	; 0x0 <__vectors>

0000009e <main>:

int main(void)
{
    unsigned char swh;
	
	DDRA = 0x00;
  9e:	1a ba       	out	0x1a, r1	; 26
	DDRC = 0xFF;
  a0:	8f ef       	ldi	r24, 0xFF	; 255
  a2:	84 bb       	out	0x14, r24	; 20
	
    while (1) 
    {
		swh = PINA & 0xFF;
  a4:	89 b3       	in	r24, 0x19	; 25
		if(swh == 0x7F) //sw9 pressed
  a6:	8f 37       	cpi	r24, 0x7F	; 127
  a8:	59 f4       	brne	.+22     	; 0xc0 <main+0x22>
		{
			PORTC = 0x7F;
  aa:	85 bb       	out	0x15, r24	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  ac:	2f ef       	ldi	r18, 0xFF	; 255
  ae:	80 e7       	ldi	r24, 0x70	; 112
  b0:	92 e0       	ldi	r25, 0x02	; 2
  b2:	21 50       	subi	r18, 0x01	; 1
  b4:	80 40       	sbci	r24, 0x00	; 0
  b6:	90 40       	sbci	r25, 0x00	; 0
  b8:	e1 f7       	brne	.-8      	; 0xb2 <main+0x14>
  ba:	00 c0       	rjmp	.+0      	; 0xbc <main+0x1e>
  bc:	00 00       	nop
  be:	f2 cf       	rjmp	.-28     	; 0xa4 <main+0x6>
			_delay_ms(100);
		}
		else if(swh == 0xBF) //sw8 pressed
  c0:	8f 3b       	cpi	r24, 0xBF	; 191
  c2:	59 f4       	brne	.+22     	; 0xda <main+0x3c>
		{
			PORTC = 0xBF;
  c4:	85 bb       	out	0x15, r24	; 21
  c6:	2f ef       	ldi	r18, 0xFF	; 255
  c8:	80 e7       	ldi	r24, 0x70	; 112
  ca:	92 e0       	ldi	r25, 0x02	; 2
  cc:	21 50       	subi	r18, 0x01	; 1
  ce:	80 40       	sbci	r24, 0x00	; 0
  d0:	90 40       	sbci	r25, 0x00	; 0
  d2:	e1 f7       	brne	.-8      	; 0xcc <main+0x2e>
  d4:	00 c0       	rjmp	.+0      	; 0xd6 <main+0x38>
  d6:	00 00       	nop
  d8:	e5 cf       	rjmp	.-54     	; 0xa4 <main+0x6>
			_delay_ms(100);
		}
		else if(swh == 0xDF) //sw7 pressed
  da:	8f 3d       	cpi	r24, 0xDF	; 223
  dc:	59 f4       	brne	.+22     	; 0xf4 <main+0x56>
		{
			PORTC = 0xDF;
  de:	85 bb       	out	0x15, r24	; 21
  e0:	2f ef       	ldi	r18, 0xFF	; 255
  e2:	80 e7       	ldi	r24, 0x70	; 112
  e4:	92 e0       	ldi	r25, 0x02	; 2
  e6:	21 50       	subi	r18, 0x01	; 1
  e8:	80 40       	sbci	r24, 0x00	; 0
  ea:	90 40       	sbci	r25, 0x00	; 0
  ec:	e1 f7       	brne	.-8      	; 0xe6 <main+0x48>
  ee:	00 c0       	rjmp	.+0      	; 0xf0 <main+0x52>
  f0:	00 00       	nop
  f2:	d8 cf       	rjmp	.-80     	; 0xa4 <main+0x6>
			_delay_ms(100);
		}
		else if(swh == 0xEF) //sw6 pressed
  f4:	8f 3e       	cpi	r24, 0xEF	; 239
  f6:	59 f4       	brne	.+22     	; 0x10e <main+0x70>
		{
			PORTC = 0xEF;
  f8:	85 bb       	out	0x15, r24	; 21
  fa:	2f ef       	ldi	r18, 0xFF	; 255
  fc:	80 e7       	ldi	r24, 0x70	; 112
  fe:	92 e0       	ldi	r25, 0x02	; 2
 100:	21 50       	subi	r18, 0x01	; 1
 102:	80 40       	sbci	r24, 0x00	; 0
 104:	90 40       	sbci	r25, 0x00	; 0
 106:	e1 f7       	brne	.-8      	; 0x100 <main+0x62>
 108:	00 c0       	rjmp	.+0      	; 0x10a <main+0x6c>
 10a:	00 00       	nop
 10c:	cb cf       	rjmp	.-106    	; 0xa4 <main+0x6>
			_delay_ms(100);
		}
		else if(swh == 0xF7) //sw5 pressed
 10e:	87 3f       	cpi	r24, 0xF7	; 247
 110:	59 f4       	brne	.+22     	; 0x128 <main+0x8a>
		{
			PORTC = 0xF7;
 112:	85 bb       	out	0x15, r24	; 21
 114:	2f ef       	ldi	r18, 0xFF	; 255
 116:	80 e7       	ldi	r24, 0x70	; 112
 118:	92 e0       	ldi	r25, 0x02	; 2
 11a:	21 50       	subi	r18, 0x01	; 1
 11c:	80 40       	sbci	r24, 0x00	; 0
 11e:	90 40       	sbci	r25, 0x00	; 0
 120:	e1 f7       	brne	.-8      	; 0x11a <main+0x7c>
 122:	00 c0       	rjmp	.+0      	; 0x124 <main+0x86>
 124:	00 00       	nop
 126:	be cf       	rjmp	.-132    	; 0xa4 <main+0x6>
			_delay_ms(100);
		}
		else if(swh == 0xFB) //sw4 pressed
 128:	8b 3f       	cpi	r24, 0xFB	; 251
 12a:	59 f4       	brne	.+22     	; 0x142 <main+0xa4>
		{
			PORTC = 0xFB;
 12c:	85 bb       	out	0x15, r24	; 21
 12e:	2f ef       	ldi	r18, 0xFF	; 255
 130:	80 e7       	ldi	r24, 0x70	; 112
 132:	92 e0       	ldi	r25, 0x02	; 2
 134:	21 50       	subi	r18, 0x01	; 1
 136:	80 40       	sbci	r24, 0x00	; 0
 138:	90 40       	sbci	r25, 0x00	; 0
 13a:	e1 f7       	brne	.-8      	; 0x134 <main+0x96>
 13c:	00 c0       	rjmp	.+0      	; 0x13e <main+0xa0>
 13e:	00 00       	nop
 140:	b1 cf       	rjmp	.-158    	; 0xa4 <main+0x6>
			_delay_ms(100);
		}
		else if(swh == 0xFD) //sw3 pressed
 142:	8d 3f       	cpi	r24, 0xFD	; 253
 144:	59 f4       	brne	.+22     	; 0x15c <main+0xbe>
		{
			PORTC = 0xFD;
 146:	85 bb       	out	0x15, r24	; 21
 148:	2f ef       	ldi	r18, 0xFF	; 255
 14a:	80 e7       	ldi	r24, 0x70	; 112
 14c:	92 e0       	ldi	r25, 0x02	; 2
 14e:	21 50       	subi	r18, 0x01	; 1
 150:	80 40       	sbci	r24, 0x00	; 0
 152:	90 40       	sbci	r25, 0x00	; 0
 154:	e1 f7       	brne	.-8      	; 0x14e <main+0xb0>
 156:	00 c0       	rjmp	.+0      	; 0x158 <main+0xba>
 158:	00 00       	nop
 15a:	a4 cf       	rjmp	.-184    	; 0xa4 <main+0x6>
			_delay_ms(100);
		}
		else if(swh == 0xFE) //sw2 pressed
 15c:	8e 3f       	cpi	r24, 0xFE	; 254
 15e:	59 f4       	brne	.+22     	; 0x176 <main+0xd8>
		{
			PORTC = 0xFE;
 160:	85 bb       	out	0x15, r24	; 21
 162:	2f ef       	ldi	r18, 0xFF	; 255
 164:	80 e7       	ldi	r24, 0x70	; 112
 166:	92 e0       	ldi	r25, 0x02	; 2
 168:	21 50       	subi	r18, 0x01	; 1
 16a:	80 40       	sbci	r24, 0x00	; 0
 16c:	90 40       	sbci	r25, 0x00	; 0
 16e:	e1 f7       	brne	.-8      	; 0x168 <main+0xca>
 170:	00 c0       	rjmp	.+0      	; 0x172 <main+0xd4>
 172:	00 00       	nop
 174:	97 cf       	rjmp	.-210    	; 0xa4 <main+0x6>
			_delay_ms(100);
		}
		else
		{
			PORTC = 0xFF;
 176:	8f ef       	ldi	r24, 0xFF	; 255
 178:	85 bb       	out	0x15, r24	; 21
 17a:	2f ef       	ldi	r18, 0xFF	; 255
 17c:	80 e7       	ldi	r24, 0x70	; 112
 17e:	92 e0       	ldi	r25, 0x02	; 2
 180:	21 50       	subi	r18, 0x01	; 1
 182:	80 40       	sbci	r24, 0x00	; 0
 184:	90 40       	sbci	r25, 0x00	; 0
 186:	e1 f7       	brne	.-8      	; 0x180 <main+0xe2>
 188:	00 c0       	rjmp	.+0      	; 0x18a <main+0xec>
 18a:	00 00       	nop
 18c:	8b cf       	rjmp	.-234    	; 0xa4 <main+0x6>

0000018e <_exit>:
 18e:	f8 94       	cli

00000190 <__stop_program>:
 190:	ff cf       	rjmp	.-2      	; 0x190 <__stop_program>
