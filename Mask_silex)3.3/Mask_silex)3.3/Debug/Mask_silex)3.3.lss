
Mask_silex)3.3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000274  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000220  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000274  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000002a4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  000002e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000ba2  00000000  00000000  00000304  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000081a  00000000  00000000  00000ea6  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003f4  00000000  00000000  000016c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  00001ab4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003fa  00000000  00000000  00001ad8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000042f  00000000  00000000  00001ed2  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  00002301  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	4b c0       	rjmp	.+150    	; 0x9c <__bad_interrupt>
   6:	00 00       	nop
   8:	49 c0       	rjmp	.+146    	; 0x9c <__bad_interrupt>
   a:	00 00       	nop
   c:	47 c0       	rjmp	.+142    	; 0x9c <__bad_interrupt>
   e:	00 00       	nop
  10:	45 c0       	rjmp	.+138    	; 0x9c <__bad_interrupt>
  12:	00 00       	nop
  14:	43 c0       	rjmp	.+134    	; 0x9c <__bad_interrupt>
  16:	00 00       	nop
  18:	41 c0       	rjmp	.+130    	; 0x9c <__bad_interrupt>
  1a:	00 00       	nop
  1c:	3f c0       	rjmp	.+126    	; 0x9c <__bad_interrupt>
  1e:	00 00       	nop
  20:	3d c0       	rjmp	.+122    	; 0x9c <__bad_interrupt>
  22:	00 00       	nop
  24:	3b c0       	rjmp	.+118    	; 0x9c <__bad_interrupt>
  26:	00 00       	nop
  28:	39 c0       	rjmp	.+114    	; 0x9c <__bad_interrupt>
  2a:	00 00       	nop
  2c:	37 c0       	rjmp	.+110    	; 0x9c <__bad_interrupt>
  2e:	00 00       	nop
  30:	35 c0       	rjmp	.+106    	; 0x9c <__bad_interrupt>
  32:	00 00       	nop
  34:	33 c0       	rjmp	.+102    	; 0x9c <__bad_interrupt>
  36:	00 00       	nop
  38:	31 c0       	rjmp	.+98     	; 0x9c <__bad_interrupt>
  3a:	00 00       	nop
  3c:	2f c0       	rjmp	.+94     	; 0x9c <__bad_interrupt>
  3e:	00 00       	nop
  40:	2d c0       	rjmp	.+90     	; 0x9c <__bad_interrupt>
  42:	00 00       	nop
  44:	2b c0       	rjmp	.+86     	; 0x9c <__bad_interrupt>
  46:	00 00       	nop
  48:	29 c0       	rjmp	.+82     	; 0x9c <__bad_interrupt>
  4a:	00 00       	nop
  4c:	27 c0       	rjmp	.+78     	; 0x9c <__bad_interrupt>
  4e:	00 00       	nop
  50:	25 c0       	rjmp	.+74     	; 0x9c <__bad_interrupt>
  52:	00 00       	nop
  54:	23 c0       	rjmp	.+70     	; 0x9c <__bad_interrupt>
  56:	00 00       	nop
  58:	21 c0       	rjmp	.+66     	; 0x9c <__bad_interrupt>
  5a:	00 00       	nop
  5c:	1f c0       	rjmp	.+62     	; 0x9c <__bad_interrupt>
  5e:	00 00       	nop
  60:	1d c0       	rjmp	.+58     	; 0x9c <__bad_interrupt>
  62:	00 00       	nop
  64:	1b c0       	rjmp	.+54     	; 0x9c <__bad_interrupt>
  66:	00 00       	nop
  68:	19 c0       	rjmp	.+50     	; 0x9c <__bad_interrupt>
  6a:	00 00       	nop
  6c:	17 c0       	rjmp	.+46     	; 0x9c <__bad_interrupt>
  6e:	00 00       	nop
  70:	15 c0       	rjmp	.+42     	; 0x9c <__bad_interrupt>
  72:	00 00       	nop
  74:	13 c0       	rjmp	.+38     	; 0x9c <__bad_interrupt>
  76:	00 00       	nop
  78:	11 c0       	rjmp	.+34     	; 0x9c <__bad_interrupt>
  7a:	00 00       	nop
  7c:	0f c0       	rjmp	.+30     	; 0x9c <__bad_interrupt>
  7e:	00 00       	nop
  80:	0d c0       	rjmp	.+26     	; 0x9c <__bad_interrupt>
  82:	00 00       	nop
  84:	0b c0       	rjmp	.+22     	; 0x9c <__bad_interrupt>
  86:	00 00       	nop
  88:	09 c0       	rjmp	.+18     	; 0x9c <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61
  98:	02 d0       	rcall	.+4      	; 0x9e <main>
  9a:	c0 c0       	rjmp	.+384    	; 0x21c <_exit>

0000009c <__bad_interrupt>:
  9c:	b1 cf       	rjmp	.-158    	; 0x0 <__vectors>

0000009e <main>:

int main(void)
{
	unsigned char swh;
	
	DDRA = 0x00;
  9e:	1a ba       	out	0x1a, r1	; 26
	DDRC = 0xFF;
  a0:	8f ef       	ldi	r24, 0xFF	; 255
  a2:	84 bb       	out	0x14, r24	; 20
	
	while (1)
	{
		swh = PINA & 0x78;
  a4:	89 b3       	in	r24, 0x19	; 25
  a6:	88 77       	andi	r24, 0x78	; 120
		if(swh == 0x38) //sw8 pressed
  a8:	88 33       	cpi	r24, 0x38	; 56
  aa:	49 f5       	brne	.+82     	; 0xfe <main+0x60>
		{
			PORTC = 0xFE;
  ac:	8e ef       	ldi	r24, 0xFE	; 254
  ae:	85 bb       	out	0x15, r24	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  b0:	2f ef       	ldi	r18, 0xFF	; 255
  b2:	49 e6       	ldi	r20, 0x69	; 105
  b4:	88 e1       	ldi	r24, 0x18	; 24
  b6:	21 50       	subi	r18, 0x01	; 1
  b8:	40 40       	sbci	r20, 0x00	; 0
  ba:	80 40       	sbci	r24, 0x00	; 0
  bc:	e1 f7       	brne	.-8      	; 0xb6 <main+0x18>
  be:	00 c0       	rjmp	.+0      	; 0xc0 <main+0x22>
  c0:	00 00       	nop
			_delay_ms(1000);
			for(int i=0;i<7;i++)
  c2:	20 e0       	ldi	r18, 0x00	; 0
  c4:	30 e0       	ldi	r19, 0x00	; 0
  c6:	0e c0       	rjmp	.+28     	; 0xe4 <main+0x46>
			{
				PORTC = (PORTC <<1);
  c8:	85 b3       	in	r24, 0x15	; 21
  ca:	88 0f       	add	r24, r24
  cc:	85 bb       	out	0x15, r24	; 21
  ce:	9f ef       	ldi	r25, 0xFF	; 255
  d0:	49 e6       	ldi	r20, 0x69	; 105
  d2:	88 e1       	ldi	r24, 0x18	; 24
  d4:	91 50       	subi	r25, 0x01	; 1
  d6:	40 40       	sbci	r20, 0x00	; 0
  d8:	80 40       	sbci	r24, 0x00	; 0
  da:	e1 f7       	brne	.-8      	; 0xd4 <main+0x36>
  dc:	00 c0       	rjmp	.+0      	; 0xde <main+0x40>
  de:	00 00       	nop
		swh = PINA & 0x78;
		if(swh == 0x38) //sw8 pressed
		{
			PORTC = 0xFE;
			_delay_ms(1000);
			for(int i=0;i<7;i++)
  e0:	2f 5f       	subi	r18, 0xFF	; 255
  e2:	3f 4f       	sbci	r19, 0xFF	; 255
  e4:	27 30       	cpi	r18, 0x07	; 7
  e6:	31 05       	cpc	r19, r1
  e8:	7c f3       	brlt	.-34     	; 0xc8 <main+0x2a>
  ea:	9f ef       	ldi	r25, 0xFF	; 255
  ec:	20 e7       	ldi	r18, 0x70	; 112
  ee:	42 e0       	ldi	r20, 0x02	; 2
  f0:	91 50       	subi	r25, 0x01	; 1
  f2:	20 40       	sbci	r18, 0x00	; 0
  f4:	40 40       	sbci	r20, 0x00	; 0
  f6:	e1 f7       	brne	.-8      	; 0xf0 <main+0x52>
  f8:	00 c0       	rjmp	.+0      	; 0xfa <main+0x5c>
  fa:	00 00       	nop
  fc:	d3 cf       	rjmp	.-90     	; 0xa4 <main+0x6>
				PORTC = (PORTC <<1);
				_delay_ms(1000);
			}
			_delay_ms(100);
		}
		else if(swh == 0x58) //sw7 pressed
  fe:	88 35       	cpi	r24, 0x58	; 88
 100:	51 f5       	brne	.+84     	; 0x156 <main+0xb8>
		{
			PORTC = 0xFC;
 102:	8c ef       	ldi	r24, 0xFC	; 252
 104:	85 bb       	out	0x15, r24	; 21
 106:	8f ef       	ldi	r24, 0xFF	; 255
 108:	99 e6       	ldi	r25, 0x69	; 105
 10a:	28 e1       	ldi	r18, 0x18	; 24
 10c:	81 50       	subi	r24, 0x01	; 1
 10e:	90 40       	sbci	r25, 0x00	; 0
 110:	20 40       	sbci	r18, 0x00	; 0
 112:	e1 f7       	brne	.-8      	; 0x10c <main+0x6e>
 114:	00 c0       	rjmp	.+0      	; 0x116 <main+0x78>
 116:	00 00       	nop
			_delay_ms(1000);
			for(int i=0;i<3;i++)
 118:	20 e0       	ldi	r18, 0x00	; 0
 11a:	30 e0       	ldi	r19, 0x00	; 0
 11c:	0f c0       	rjmp	.+30     	; 0x13c <main+0x9e>
			{
				PORTC = (PORTC <<2);
 11e:	85 b3       	in	r24, 0x15	; 21
 120:	88 0f       	add	r24, r24
 122:	88 0f       	add	r24, r24
 124:	85 bb       	out	0x15, r24	; 21
 126:	4f ef       	ldi	r20, 0xFF	; 255
 128:	89 e6       	ldi	r24, 0x69	; 105
 12a:	98 e1       	ldi	r25, 0x18	; 24
 12c:	41 50       	subi	r20, 0x01	; 1
 12e:	80 40       	sbci	r24, 0x00	; 0
 130:	90 40       	sbci	r25, 0x00	; 0
 132:	e1 f7       	brne	.-8      	; 0x12c <main+0x8e>
 134:	00 c0       	rjmp	.+0      	; 0x136 <main+0x98>
 136:	00 00       	nop
		}
		else if(swh == 0x58) //sw7 pressed
		{
			PORTC = 0xFC;
			_delay_ms(1000);
			for(int i=0;i<3;i++)
 138:	2f 5f       	subi	r18, 0xFF	; 255
 13a:	3f 4f       	sbci	r19, 0xFF	; 255
 13c:	23 30       	cpi	r18, 0x03	; 3
 13e:	31 05       	cpc	r19, r1
 140:	74 f3       	brlt	.-36     	; 0x11e <main+0x80>
 142:	2f ef       	ldi	r18, 0xFF	; 255
 144:	40 e7       	ldi	r20, 0x70	; 112
 146:	82 e0       	ldi	r24, 0x02	; 2
 148:	21 50       	subi	r18, 0x01	; 1
 14a:	40 40       	sbci	r20, 0x00	; 0
 14c:	80 40       	sbci	r24, 0x00	; 0
 14e:	e1 f7       	brne	.-8      	; 0x148 <main+0xaa>
 150:	00 c0       	rjmp	.+0      	; 0x152 <main+0xb4>
 152:	00 00       	nop
 154:	a7 cf       	rjmp	.-178    	; 0xa4 <main+0x6>
				PORTC = (PORTC <<2);
				_delay_ms(1000);
			}
			_delay_ms(100);
		}
		else if(swh == 0x68) //sw6 pressed
 156:	88 36       	cpi	r24, 0x68	; 104
 158:	49 f5       	brne	.+82     	; 0x1ac <main+0x10e>
		{
			PORTC = 0x7F;
 15a:	8f e7       	ldi	r24, 0x7F	; 127
 15c:	85 bb       	out	0x15, r24	; 21
 15e:	9f ef       	ldi	r25, 0xFF	; 255
 160:	29 e6       	ldi	r18, 0x69	; 105
 162:	48 e1       	ldi	r20, 0x18	; 24
 164:	91 50       	subi	r25, 0x01	; 1
 166:	20 40       	sbci	r18, 0x00	; 0
 168:	40 40       	sbci	r20, 0x00	; 0
 16a:	e1 f7       	brne	.-8      	; 0x164 <main+0xc6>
 16c:	00 c0       	rjmp	.+0      	; 0x16e <main+0xd0>
 16e:	00 00       	nop
			_delay_ms(1000);
			for(int i=0;i<7;i++)
 170:	20 e0       	ldi	r18, 0x00	; 0
 172:	30 e0       	ldi	r19, 0x00	; 0
 174:	0e c0       	rjmp	.+28     	; 0x192 <main+0xf4>
			{
				PORTC = (PORTC >>1);
 176:	85 b3       	in	r24, 0x15	; 21
 178:	86 95       	lsr	r24
 17a:	85 bb       	out	0x15, r24	; 21
 17c:	8f ef       	ldi	r24, 0xFF	; 255
 17e:	99 e6       	ldi	r25, 0x69	; 105
 180:	48 e1       	ldi	r20, 0x18	; 24
 182:	81 50       	subi	r24, 0x01	; 1
 184:	90 40       	sbci	r25, 0x00	; 0
 186:	40 40       	sbci	r20, 0x00	; 0
 188:	e1 f7       	brne	.-8      	; 0x182 <main+0xe4>
 18a:	00 c0       	rjmp	.+0      	; 0x18c <main+0xee>
 18c:	00 00       	nop
		}
		else if(swh == 0x68) //sw6 pressed
		{
			PORTC = 0x7F;
			_delay_ms(1000);
			for(int i=0;i<7;i++)
 18e:	2f 5f       	subi	r18, 0xFF	; 255
 190:	3f 4f       	sbci	r19, 0xFF	; 255
 192:	27 30       	cpi	r18, 0x07	; 7
 194:	31 05       	cpc	r19, r1
 196:	7c f3       	brlt	.-34     	; 0x176 <main+0xd8>
 198:	8f ef       	ldi	r24, 0xFF	; 255
 19a:	90 e7       	ldi	r25, 0x70	; 112
 19c:	22 e0       	ldi	r18, 0x02	; 2
 19e:	81 50       	subi	r24, 0x01	; 1
 1a0:	90 40       	sbci	r25, 0x00	; 0
 1a2:	20 40       	sbci	r18, 0x00	; 0
 1a4:	e1 f7       	brne	.-8      	; 0x19e <main+0x100>
 1a6:	00 c0       	rjmp	.+0      	; 0x1a8 <main+0x10a>
 1a8:	00 00       	nop
 1aa:	7c cf       	rjmp	.-264    	; 0xa4 <main+0x6>
				PORTC = (PORTC >>1);
				_delay_ms(1000);
			}
			_delay_ms(100);
		}
		else if(swh == 0x70) //sw5 pressed
 1ac:	80 37       	cpi	r24, 0x70	; 112
 1ae:	51 f5       	brne	.+84     	; 0x204 <main+0x166>
		{
			PORTC = 0x3F;
 1b0:	8f e3       	ldi	r24, 0x3F	; 63
 1b2:	85 bb       	out	0x15, r24	; 21
 1b4:	4f ef       	ldi	r20, 0xFF	; 255
 1b6:	89 e6       	ldi	r24, 0x69	; 105
 1b8:	98 e1       	ldi	r25, 0x18	; 24
 1ba:	41 50       	subi	r20, 0x01	; 1
 1bc:	80 40       	sbci	r24, 0x00	; 0
 1be:	90 40       	sbci	r25, 0x00	; 0
 1c0:	e1 f7       	brne	.-8      	; 0x1ba <main+0x11c>
 1c2:	00 c0       	rjmp	.+0      	; 0x1c4 <main+0x126>
 1c4:	00 00       	nop
			_delay_ms(1000);
			for(int i=0;i<3;i++)
 1c6:	20 e0       	ldi	r18, 0x00	; 0
 1c8:	30 e0       	ldi	r19, 0x00	; 0
 1ca:	0f c0       	rjmp	.+30     	; 0x1ea <main+0x14c>
			{
				PORTC = (PORTC >>2);
 1cc:	85 b3       	in	r24, 0x15	; 21
 1ce:	86 95       	lsr	r24
 1d0:	86 95       	lsr	r24
 1d2:	85 bb       	out	0x15, r24	; 21
 1d4:	4f ef       	ldi	r20, 0xFF	; 255
 1d6:	89 e6       	ldi	r24, 0x69	; 105
 1d8:	98 e1       	ldi	r25, 0x18	; 24
 1da:	41 50       	subi	r20, 0x01	; 1
 1dc:	80 40       	sbci	r24, 0x00	; 0
 1de:	90 40       	sbci	r25, 0x00	; 0
 1e0:	e1 f7       	brne	.-8      	; 0x1da <main+0x13c>
 1e2:	00 c0       	rjmp	.+0      	; 0x1e4 <main+0x146>
 1e4:	00 00       	nop
		}
		else if(swh == 0x70) //sw5 pressed
		{
			PORTC = 0x3F;
			_delay_ms(1000);
			for(int i=0;i<3;i++)
 1e6:	2f 5f       	subi	r18, 0xFF	; 255
 1e8:	3f 4f       	sbci	r19, 0xFF	; 255
 1ea:	23 30       	cpi	r18, 0x03	; 3
 1ec:	31 05       	cpc	r19, r1
 1ee:	74 f3       	brlt	.-36     	; 0x1cc <main+0x12e>
 1f0:	2f ef       	ldi	r18, 0xFF	; 255
 1f2:	40 e7       	ldi	r20, 0x70	; 112
 1f4:	82 e0       	ldi	r24, 0x02	; 2
 1f6:	21 50       	subi	r18, 0x01	; 1
 1f8:	40 40       	sbci	r20, 0x00	; 0
 1fa:	80 40       	sbci	r24, 0x00	; 0
 1fc:	e1 f7       	brne	.-8      	; 0x1f6 <main+0x158>
 1fe:	00 c0       	rjmp	.+0      	; 0x200 <main+0x162>
 200:	00 00       	nop
 202:	50 cf       	rjmp	.-352    	; 0xa4 <main+0x6>
			}
			_delay_ms(100);
		}
		else
		{
			PORTC = 0xFF;
 204:	8f ef       	ldi	r24, 0xFF	; 255
 206:	85 bb       	out	0x15, r24	; 21
 208:	9f ef       	ldi	r25, 0xFF	; 255
 20a:	20 e7       	ldi	r18, 0x70	; 112
 20c:	42 e0       	ldi	r20, 0x02	; 2
 20e:	91 50       	subi	r25, 0x01	; 1
 210:	20 40       	sbci	r18, 0x00	; 0
 212:	40 40       	sbci	r20, 0x00	; 0
 214:	e1 f7       	brne	.-8      	; 0x20e <main+0x170>
 216:	00 c0       	rjmp	.+0      	; 0x218 <main+0x17a>
 218:	00 00       	nop
 21a:	44 cf       	rjmp	.-376    	; 0xa4 <main+0x6>

0000021c <_exit>:
 21c:	f8 94       	cli

0000021e <__stop_program>:
 21e:	ff cf       	rjmp	.-2      	; 0x21e <__stop_program>
