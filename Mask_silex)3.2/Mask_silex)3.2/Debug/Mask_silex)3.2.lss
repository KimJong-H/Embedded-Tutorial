
Mask_silex)3.2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000001f2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000019e  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000001f2  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000224  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  00000264  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000a62  00000000  00000000  00000284  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000080f  00000000  00000000  00000ce6  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000034c  00000000  00000000  000014f5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  00001844  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003fa  00000000  00000000  00001868  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000002b7  00000000  00000000  00001c62  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  00001f19  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	4b c0       	rjmp	.+150    	; 0x9c <__bad_interrupt>
   6:	00 00       	nop
   8:	49 c0       	rjmp	.+146    	; 0x9c <__bad_interrupt>
   a:	00 00       	nop
   c:	47 c0       	rjmp	.+142    	; 0x9c <__bad_interrupt>
   e:	00 00       	nop
  10:	45 c0       	rjmp	.+138    	; 0x9c <__bad_interrupt>
  12:	00 00       	nop
  14:	43 c0       	rjmp	.+134    	; 0x9c <__bad_interrupt>
  16:	00 00       	nop
  18:	41 c0       	rjmp	.+130    	; 0x9c <__bad_interrupt>
  1a:	00 00       	nop
  1c:	3f c0       	rjmp	.+126    	; 0x9c <__bad_interrupt>
  1e:	00 00       	nop
  20:	3d c0       	rjmp	.+122    	; 0x9c <__bad_interrupt>
  22:	00 00       	nop
  24:	3b c0       	rjmp	.+118    	; 0x9c <__bad_interrupt>
  26:	00 00       	nop
  28:	39 c0       	rjmp	.+114    	; 0x9c <__bad_interrupt>
  2a:	00 00       	nop
  2c:	37 c0       	rjmp	.+110    	; 0x9c <__bad_interrupt>
  2e:	00 00       	nop
  30:	35 c0       	rjmp	.+106    	; 0x9c <__bad_interrupt>
  32:	00 00       	nop
  34:	33 c0       	rjmp	.+102    	; 0x9c <__bad_interrupt>
  36:	00 00       	nop
  38:	31 c0       	rjmp	.+98     	; 0x9c <__bad_interrupt>
  3a:	00 00       	nop
  3c:	2f c0       	rjmp	.+94     	; 0x9c <__bad_interrupt>
  3e:	00 00       	nop
  40:	2d c0       	rjmp	.+90     	; 0x9c <__bad_interrupt>
  42:	00 00       	nop
  44:	2b c0       	rjmp	.+86     	; 0x9c <__bad_interrupt>
  46:	00 00       	nop
  48:	29 c0       	rjmp	.+82     	; 0x9c <__bad_interrupt>
  4a:	00 00       	nop
  4c:	27 c0       	rjmp	.+78     	; 0x9c <__bad_interrupt>
  4e:	00 00       	nop
  50:	25 c0       	rjmp	.+74     	; 0x9c <__bad_interrupt>
  52:	00 00       	nop
  54:	23 c0       	rjmp	.+70     	; 0x9c <__bad_interrupt>
  56:	00 00       	nop
  58:	21 c0       	rjmp	.+66     	; 0x9c <__bad_interrupt>
  5a:	00 00       	nop
  5c:	1f c0       	rjmp	.+62     	; 0x9c <__bad_interrupt>
  5e:	00 00       	nop
  60:	1d c0       	rjmp	.+58     	; 0x9c <__bad_interrupt>
  62:	00 00       	nop
  64:	1b c0       	rjmp	.+54     	; 0x9c <__bad_interrupt>
  66:	00 00       	nop
  68:	19 c0       	rjmp	.+50     	; 0x9c <__bad_interrupt>
  6a:	00 00       	nop
  6c:	17 c0       	rjmp	.+46     	; 0x9c <__bad_interrupt>
  6e:	00 00       	nop
  70:	15 c0       	rjmp	.+42     	; 0x9c <__bad_interrupt>
  72:	00 00       	nop
  74:	13 c0       	rjmp	.+38     	; 0x9c <__bad_interrupt>
  76:	00 00       	nop
  78:	11 c0       	rjmp	.+34     	; 0x9c <__bad_interrupt>
  7a:	00 00       	nop
  7c:	0f c0       	rjmp	.+30     	; 0x9c <__bad_interrupt>
  7e:	00 00       	nop
  80:	0d c0       	rjmp	.+26     	; 0x9c <__bad_interrupt>
  82:	00 00       	nop
  84:	0b c0       	rjmp	.+22     	; 0x9c <__bad_interrupt>
  86:	00 00       	nop
  88:	09 c0       	rjmp	.+18     	; 0x9c <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61
  98:	02 d0       	rcall	.+4      	; 0x9e <main>
  9a:	7f c0       	rjmp	.+254    	; 0x19a <_exit>

0000009c <__bad_interrupt>:
  9c:	b1 cf       	rjmp	.-158    	; 0x0 <__vectors>

0000009e <main>:

int main(void)
{
	unsigned char swh;
	
	DDRA = 0x00;
  9e:	1a ba       	out	0x1a, r1	; 26
	DDRC = 0xFF;
  a0:	8f ef       	ldi	r24, 0xFF	; 255
  a2:	84 bb       	out	0x14, r24	; 20
	
	while (1)
	{
		swh = PINA & 0xFF;
  a4:	89 b3       	in	r24, 0x19	; 25
		if(swh == 0x7F) //sw9 pressed
  a6:	8f 37       	cpi	r24, 0x7F	; 127
  a8:	59 f4       	brne	.+22     	; 0xc0 <main+0x22>
		{
			PORTC = 0x00;
  aa:	15 ba       	out	0x15, r1	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  ac:	2f ef       	ldi	r18, 0xFF	; 255
  ae:	80 e7       	ldi	r24, 0x70	; 112
  b0:	92 e0       	ldi	r25, 0x02	; 2
  b2:	21 50       	subi	r18, 0x01	; 1
  b4:	80 40       	sbci	r24, 0x00	; 0
  b6:	90 40       	sbci	r25, 0x00	; 0
  b8:	e1 f7       	brne	.-8      	; 0xb2 <main+0x14>
  ba:	00 c0       	rjmp	.+0      	; 0xbc <main+0x1e>
  bc:	00 00       	nop
  be:	f2 cf       	rjmp	.-28     	; 0xa4 <main+0x6>
			_delay_ms(100);
		}
		else if(swh == 0xBF) //sw8 pressed
  c0:	8f 3b       	cpi	r24, 0xBF	; 191
  c2:	61 f4       	brne	.+24     	; 0xdc <main+0x3e>
		{
			PORTC = 0x80;
  c4:	80 e8       	ldi	r24, 0x80	; 128
  c6:	85 bb       	out	0x15, r24	; 21
  c8:	2f ef       	ldi	r18, 0xFF	; 255
  ca:	80 e7       	ldi	r24, 0x70	; 112
  cc:	92 e0       	ldi	r25, 0x02	; 2
  ce:	21 50       	subi	r18, 0x01	; 1
  d0:	80 40       	sbci	r24, 0x00	; 0
  d2:	90 40       	sbci	r25, 0x00	; 0
  d4:	e1 f7       	brne	.-8      	; 0xce <main+0x30>
  d6:	00 c0       	rjmp	.+0      	; 0xd8 <main+0x3a>
  d8:	00 00       	nop
  da:	e4 cf       	rjmp	.-56     	; 0xa4 <main+0x6>
			_delay_ms(100);
		}
		else if(swh == 0xDF) //sw7 pressed
  dc:	8f 3d       	cpi	r24, 0xDF	; 223
  de:	61 f4       	brne	.+24     	; 0xf8 <main+0x5a>
		{
			PORTC = 0xC0;
  e0:	80 ec       	ldi	r24, 0xC0	; 192
  e2:	85 bb       	out	0x15, r24	; 21
  e4:	2f ef       	ldi	r18, 0xFF	; 255
  e6:	80 e7       	ldi	r24, 0x70	; 112
  e8:	92 e0       	ldi	r25, 0x02	; 2
  ea:	21 50       	subi	r18, 0x01	; 1
  ec:	80 40       	sbci	r24, 0x00	; 0
  ee:	90 40       	sbci	r25, 0x00	; 0
  f0:	e1 f7       	brne	.-8      	; 0xea <main+0x4c>
  f2:	00 c0       	rjmp	.+0      	; 0xf4 <main+0x56>
  f4:	00 00       	nop
  f6:	d6 cf       	rjmp	.-84     	; 0xa4 <main+0x6>
			_delay_ms(100);
		}
		else if(swh == 0xEF) //sw6 pressed
  f8:	8f 3e       	cpi	r24, 0xEF	; 239
  fa:	61 f4       	brne	.+24     	; 0x114 <main+0x76>
		{
			PORTC = 0xE0;
  fc:	80 ee       	ldi	r24, 0xE0	; 224
  fe:	85 bb       	out	0x15, r24	; 21
 100:	2f ef       	ldi	r18, 0xFF	; 255
 102:	80 e7       	ldi	r24, 0x70	; 112
 104:	92 e0       	ldi	r25, 0x02	; 2
 106:	21 50       	subi	r18, 0x01	; 1
 108:	80 40       	sbci	r24, 0x00	; 0
 10a:	90 40       	sbci	r25, 0x00	; 0
 10c:	e1 f7       	brne	.-8      	; 0x106 <main+0x68>
 10e:	00 c0       	rjmp	.+0      	; 0x110 <main+0x72>
 110:	00 00       	nop
 112:	c8 cf       	rjmp	.-112    	; 0xa4 <main+0x6>
			_delay_ms(100);
		}
		else if(swh == 0xF7) //sw5 pressed
 114:	87 3f       	cpi	r24, 0xF7	; 247
 116:	61 f4       	brne	.+24     	; 0x130 <main+0x92>
		{
			PORTC = 0xF0;
 118:	80 ef       	ldi	r24, 0xF0	; 240
 11a:	85 bb       	out	0x15, r24	; 21
 11c:	2f ef       	ldi	r18, 0xFF	; 255
 11e:	80 e7       	ldi	r24, 0x70	; 112
 120:	92 e0       	ldi	r25, 0x02	; 2
 122:	21 50       	subi	r18, 0x01	; 1
 124:	80 40       	sbci	r24, 0x00	; 0
 126:	90 40       	sbci	r25, 0x00	; 0
 128:	e1 f7       	brne	.-8      	; 0x122 <main+0x84>
 12a:	00 c0       	rjmp	.+0      	; 0x12c <main+0x8e>
 12c:	00 00       	nop
 12e:	ba cf       	rjmp	.-140    	; 0xa4 <main+0x6>
			_delay_ms(100);
		}
		else if(swh == 0xFB) //sw4 pressed
 130:	8b 3f       	cpi	r24, 0xFB	; 251
 132:	61 f4       	brne	.+24     	; 0x14c <main+0xae>
		{
			PORTC = 0xF8;
 134:	88 ef       	ldi	r24, 0xF8	; 248
 136:	85 bb       	out	0x15, r24	; 21
 138:	2f ef       	ldi	r18, 0xFF	; 255
 13a:	80 e7       	ldi	r24, 0x70	; 112
 13c:	92 e0       	ldi	r25, 0x02	; 2
 13e:	21 50       	subi	r18, 0x01	; 1
 140:	80 40       	sbci	r24, 0x00	; 0
 142:	90 40       	sbci	r25, 0x00	; 0
 144:	e1 f7       	brne	.-8      	; 0x13e <main+0xa0>
 146:	00 c0       	rjmp	.+0      	; 0x148 <main+0xaa>
 148:	00 00       	nop
 14a:	ac cf       	rjmp	.-168    	; 0xa4 <main+0x6>
			_delay_ms(100);
		}
		else if(swh == 0xFD) //sw3 pressed
 14c:	8d 3f       	cpi	r24, 0xFD	; 253
 14e:	61 f4       	brne	.+24     	; 0x168 <main+0xca>
		{
			PORTC = 0xFC;
 150:	8c ef       	ldi	r24, 0xFC	; 252
 152:	85 bb       	out	0x15, r24	; 21
 154:	2f ef       	ldi	r18, 0xFF	; 255
 156:	80 e7       	ldi	r24, 0x70	; 112
 158:	92 e0       	ldi	r25, 0x02	; 2
 15a:	21 50       	subi	r18, 0x01	; 1
 15c:	80 40       	sbci	r24, 0x00	; 0
 15e:	90 40       	sbci	r25, 0x00	; 0
 160:	e1 f7       	brne	.-8      	; 0x15a <main+0xbc>
 162:	00 c0       	rjmp	.+0      	; 0x164 <main+0xc6>
 164:	00 00       	nop
 166:	9e cf       	rjmp	.-196    	; 0xa4 <main+0x6>
			_delay_ms(100);
		}
		else if(swh == 0xFE) //sw2 pressed
 168:	8e 3f       	cpi	r24, 0xFE	; 254
 16a:	59 f4       	brne	.+22     	; 0x182 <main+0xe4>
		{
			PORTC = 0xFE;
 16c:	85 bb       	out	0x15, r24	; 21
 16e:	2f ef       	ldi	r18, 0xFF	; 255
 170:	80 e7       	ldi	r24, 0x70	; 112
 172:	92 e0       	ldi	r25, 0x02	; 2
 174:	21 50       	subi	r18, 0x01	; 1
 176:	80 40       	sbci	r24, 0x00	; 0
 178:	90 40       	sbci	r25, 0x00	; 0
 17a:	e1 f7       	brne	.-8      	; 0x174 <main+0xd6>
 17c:	00 c0       	rjmp	.+0      	; 0x17e <main+0xe0>
 17e:	00 00       	nop
 180:	91 cf       	rjmp	.-222    	; 0xa4 <main+0x6>
			_delay_ms(100);
		}
		else
		{
			PORTC = 0xFF;
 182:	8f ef       	ldi	r24, 0xFF	; 255
 184:	85 bb       	out	0x15, r24	; 21
 186:	2f ef       	ldi	r18, 0xFF	; 255
 188:	80 e7       	ldi	r24, 0x70	; 112
 18a:	92 e0       	ldi	r25, 0x02	; 2
 18c:	21 50       	subi	r18, 0x01	; 1
 18e:	80 40       	sbci	r24, 0x00	; 0
 190:	90 40       	sbci	r25, 0x00	; 0
 192:	e1 f7       	brne	.-8      	; 0x18c <main+0xee>
 194:	00 c0       	rjmp	.+0      	; 0x196 <main+0xf8>
 196:	00 00       	nop
 198:	85 cf       	rjmp	.-246    	; 0xa4 <main+0x6>

0000019a <_exit>:
 19a:	f8 94       	cli

0000019c <__stop_program>:
 19c:	ff cf       	rjmp	.-2      	; 0x19c <__stop_program>
